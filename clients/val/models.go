package val

///////////////////////////////////////////////
//                                           //
//                     !                     //
//   This file is automatically generated!   //
//           Do not directly edit!           //
//                                           //
///////////////////////////////////////////////

// Spec version = 48735a0c9d1c521d94a20ff0b0b9dc927ab430ca

// AbilityCastsDto data object.
type AbilityCastsV1DTO struct {
	Ability1Casts int32 `json:"ability1Casts,omitempty"`
	Ability2Casts int32 `json:"ability2Casts,omitempty"`
	GrenadeCasts  int32 `json:"grenadeCasts,omitempty"`
	UltimateCasts int32 `json:"ultimateCasts,omitempty"`
}

// AbilityDto data object.
type AbilityV1DTO struct {
	Ability1Effects string `json:"ability1Effects,omitempty"`
	Ability2Effects string `json:"ability2Effects,omitempty"`
	GrenadeEffects  string `json:"grenadeEffects,omitempty"`
	UltimateEffects string `json:"ultimateEffects,omitempty"`
}

// ActDto data object.
type ActV1DTO struct {
	// This field is excluded from the response when a locale is set
	LocalizedNames LocalizedNamesV1DTO `json:"localizedNames,omitempty"`
	ID             string              `json:"id,omitempty"`
	Name           string              `json:"name,omitempty"`
	ParentID       string              `json:"parentId,omitempty"`
	Type           string              `json:"type,omitempty"`
	IsActive       bool                `json:"isActive,omitempty"`
}

// CoachDto data object.
type CoachV1DTO struct {
	PUUID  string `json:"puuid,omitempty"`
	TeamID string `json:"teamId,omitempty"`
}

// ContentItemDto data object.
type ContentItemV1DTO struct {
	AssetName string `json:"assetName,omitempty"`
	// This field is only included for maps and game modes. These values are used in the match response.
	AssetPath string `json:"assetPath,omitempty"`
	ID        string `json:"id,omitempty"`
	// This field is excluded from the response when a locale is set
	LocalizedNames LocalizedNamesV1DTO `json:"localizedNames,omitempty"`
	Name           string              `json:"name,omitempty"`
}

// ContentDto data object.
type ContentV1DTO struct {
	Version      string             `json:"version,omitempty"`
	Acts         []ActV1DTO         `json:"acts,omitempty"`
	Ceremonies   []ContentItemV1DTO `json:"ceremonies,omitempty"`
	Characters   []ContentItemV1DTO `json:"characters,omitempty"`
	CharmLevels  []ContentItemV1DTO `json:"charmLevels,omitempty"`
	Charms       []ContentItemV1DTO `json:"charms,omitempty"`
	Chromas      []ContentItemV1DTO `json:"chromas,omitempty"`
	Equips       []ContentItemV1DTO `json:"equips,omitempty"`
	GameModes    []ContentItemV1DTO `json:"gameModes,omitempty"`
	Maps         []ContentItemV1DTO `json:"maps,omitempty"`
	PlayerCards  []ContentItemV1DTO `json:"playerCards,omitempty"`
	PlayerTitles []ContentItemV1DTO `json:"playerTitles,omitempty"`
	SkinLevels   []ContentItemV1DTO `json:"skinLevels,omitempty"`
	Skins        []ContentItemV1DTO `json:"skins,omitempty"`
	SprayLevels  []ContentItemV1DTO `json:"sprayLevels,omitempty"`
	Sprays       []ContentItemV1DTO `json:"sprays,omitempty"`
	// Unknown type, this is a placeholder subject to change.
	Totems []string `json:"totems,omitempty"`
}

// DamageDto data object.
type DamageV1DTO struct {
	// PUUID
	Receiver  string `json:"receiver,omitempty"`
	Bodyshots int32  `json:"bodyshots,omitempty"`
	Damage    int32  `json:"damage,omitempty"`
	Headshots int32  `json:"headshots,omitempty"`
	Legshots  int32  `json:"legshots,omitempty"`
}

// EconomyDto data object.
type EconomyV1DTO struct {
	Armor        string `json:"armor,omitempty"`
	Weapon       string `json:"weapon,omitempty"`
	LoadoutValue int32  `json:"loadoutValue,omitempty"`
	Remaining    int32  `json:"remaining,omitempty"`
	Spent        int32  `json:"spent,omitempty"`
}

// FinishingDamageDto data object.
type FinishingDamageV1DTO struct {
	DamageItem          string `json:"damageItem,omitempty"`
	DamageType          string `json:"damageType,omitempty"`
	IsSecondaryFireMode bool   `json:"isSecondaryFireMode,omitempty"`
}

// KillDto data object.
type KillV1DTO struct {
	// PUUID
	Killer string `json:"killer,omitempty"`
	// PUUID
	Victim          string               `json:"victim,omitempty"`
	FinishingDamage FinishingDamageV1DTO `json:"finishingDamage,omitempty"`
	// List of PUUIDs
	Assistants                []string               `json:"assistants,omitempty"`
	PlayerLocations           []PlayerLocationsV1DTO `json:"playerLocations,omitempty"`
	VictimLocation            LocationV1DTO          `json:"victimLocation,omitempty"`
	TimeSinceGameStartMillis  int32                  `json:"timeSinceGameStartMillis,omitempty"`
	TimeSinceRoundStartMillis int32                  `json:"timeSinceRoundStartMillis,omitempty"`
}

// PlayerDto data object.
type LeaderboardPlayerV1DTO struct {
	// This field may be omitted if the player has been anonymized.
	GameName string `json:"gameName,omitempty"`
	// This field may be omitted if the player has been anonymized.
	PUUID string `json:"puuid,omitempty"`
	// This field may be omitted if the player has been anonymized.
	TagLine         string `json:"tagLine,omitempty"`
	CompetitiveTier int64  `json:"competitiveTier,omitempty"`
	LeaderboardRank int64  `json:"leaderboardRank,omitempty"`
	NumberOfWins    int64  `json:"numberOfWins,omitempty"`
	RankedRating    int64  `json:"rankedRating,omitempty"`
}

// LeaderboardDto data object.
type LeaderboardV1DTO struct {
	TierDetails map[int64]TierDetailV1DTO `json:"tierDetails,omitempty"`
	// The act id for the given leaderboard. Act ids can be found using the val-content API.
	ActID string `json:"actId,omitempty"`
	Query string `json:"query,omitempty"`
	// The shard for the given leaderboard.
	Shard                 string                   `json:"shard,omitempty"`
	Players               []LeaderboardPlayerV1DTO `json:"players,omitempty"`
	ImmortalStartingIndex int64                    `json:"immortalStartingIndex,omitempty"`
	ImmortalStartingPage  int64                    `json:"immortalStartingPage,omitempty"`
	StartIndex            int64                    `json:"startIndex,omitempty"`
	TopTierRrthreshold    int64                    `json:"topTierRRThreshold,omitempty"`
	// The total number of players in the leaderboard.
	TotalPlayers int64 `json:"totalPlayers,omitempty"`
}

// LocalizedNamesDto data object.
type LocalizedNamesV1DTO struct {
	ArAe string `json:"ar-AE,omitempty"`
	DeDe string `json:"de-DE,omitempty"`
	EnGb string `json:"en-GB,omitempty"`
	EnUs string `json:"en-US,omitempty"`
	EsEs string `json:"es-ES,omitempty"`
	EsMx string `json:"es-MX,omitempty"`
	FrFr string `json:"fr-FR,omitempty"`
	IdID string `json:"id-ID,omitempty"`
	ItIt string `json:"it-IT,omitempty"`
	JaJp string `json:"ja-JP,omitempty"`
	KoKr string `json:"ko-KR,omitempty"`
	PlPl string `json:"pl-PL,omitempty"`
	PtBr string `json:"pt-BR,omitempty"`
	RuRu string `json:"ru-RU,omitempty"`
	ThTh string `json:"th-TH,omitempty"`
	TrTr string `json:"tr-TR,omitempty"`
	ViVn string `json:"vi-VN,omitempty"`
	ZhCn string `json:"zh-CN,omitempty"`
	ZhTw string `json:"zh-TW,omitempty"`
}

// LocationDto data object.
type LocationV1DTO struct {
	X int32 `json:"x,omitempty"`
	Y int32 `json:"y,omitempty"`
}

// MatchInfoDto data object.
type MatchInfoV1DTO struct {
	CustomGameName     string `json:"customGameName,omitempty"`
	GameMode           string `json:"gameMode,omitempty"`
	MapID              string `json:"mapId,omitempty"`
	MatchID            string `json:"matchId,omitempty"`
	ProvisioningFlowID string `json:"provisioningFlowId,omitempty"`
	QueueID            string `json:"queueId,omitempty"`
	SeasonID           string `json:"seasonId,omitempty"`
	GameStartMillis    int64  `json:"gameStartMillis,omitempty"`
	GameLengthMillis   int32  `json:"gameLengthMillis,omitempty"`
	IsCompleted        bool   `json:"isCompleted,omitempty"`
	IsRanked           bool   `json:"isRanked,omitempty"`
}

// MatchDto data object.
type MatchV1DTO struct {
	Coaches      []CoachV1DTO       `json:"coaches,omitempty"`
	Players      []PlayerV1DTO      `json:"players,omitempty"`
	RoundResults []RoundResultV1DTO `json:"roundResults,omitempty"`
	Teams        []TeamV1DTO        `json:"teams,omitempty"`
	MatchInfo    MatchInfoV1DTO     `json:"matchInfo,omitempty"`
}

// MatchlistEntryDto data object.
type MatchlistEntryV1DTO struct {
	MatchID             string `json:"matchId,omitempty"`
	QueueID             string `json:"queueId,omitempty"`
	GameStartTimeMillis int64  `json:"gameStartTimeMillis,omitempty"`
}

// MatchlistDto data object.
type MatchlistV1DTO struct {
	PUUID   string                `json:"puuid,omitempty"`
	History []MatchlistEntryV1DTO `json:"history,omitempty"`
}

// PlatformDataDto data object.
type PlatformDataV1DTO struct {
	ID           string        `json:"id,omitempty"`
	Name         string        `json:"name,omitempty"`
	Incidents    []StatusV1DTO `json:"incidents,omitempty"`
	Locales      []string      `json:"locales,omitempty"`
	Maintenances []StatusV1DTO `json:"maintenances,omitempty"`
}

// PlayerLocationsDto data object.
type PlayerLocationsV1DTO struct {
	PUUID       string        `json:"puuid,omitempty"`
	Location    LocationV1DTO `json:"location,omitempty"`
	ViewRadians float32       `json:"viewRadians,omitempty"`
}

// PlayerRoundStatsDto data object.
type PlayerRoundStatsV1DTO struct {
	Ability AbilityV1DTO  `json:"ability,omitempty"`
	PUUID   string        `json:"puuid,omitempty"`
	Damage  []DamageV1DTO `json:"damage,omitempty"`
	Kills   []KillV1DTO   `json:"kills,omitempty"`
	Economy EconomyV1DTO  `json:"economy,omitempty"`
	Score   int32         `json:"score,omitempty"`
}

// PlayerStatsDto data object.
type PlayerStatsV1DTO struct {
	AbilityCasts   AbilityCastsV1DTO `json:"abilityCasts,omitempty"`
	Assists        int32             `json:"assists,omitempty"`
	Deaths         int32             `json:"deaths,omitempty"`
	Kills          int32             `json:"kills,omitempty"`
	PlaytimeMillis int32             `json:"playtimeMillis,omitempty"`
	RoundsPlayed   int32             `json:"roundsPlayed,omitempty"`
	Score          int32             `json:"score,omitempty"`
}

// PlayerDto data object.
type PlayerV1DTO struct {
	CharacterID     string           `json:"characterId,omitempty"`
	GameName        string           `json:"gameName,omitempty"`
	PUUID           string           `json:"puuid,omitempty"`
	PartyID         string           `json:"partyId,omitempty"`
	PlayerCard      string           `json:"playerCard,omitempty"`
	PlayerTitle     string           `json:"playerTitle,omitempty"`
	TagLine         string           `json:"tagLine,omitempty"`
	TeamID          string           `json:"teamId,omitempty"`
	Stats           PlayerStatsV1DTO `json:"stats,omitempty"`
	CompetitiveTier int32            `json:"competitiveTier,omitempty"`
}

// RecentMatchesDto data object.
type RecentMatchesV1DTO struct {
	// A list of recent match ids.
	MatchIDs    []string `json:"matchIds,omitempty"`
	CurrentTime int64    `json:"currentTime,omitempty"`
}

// RoundResultDto data object.
type RoundResultV1DTO struct {
	// PUUID of player
	BombDefuser string `json:"bombDefuser,omitempty"`
	// PUUID of player
	BombPlanter           string                  `json:"bombPlanter,omitempty"`
	PlantSite             string                  `json:"plantSite,omitempty"`
	RoundCeremony         string                  `json:"roundCeremony,omitempty"`
	RoundResult           string                  `json:"roundResult,omitempty"`
	RoundResultCode       string                  `json:"roundResultCode,omitempty"`
	WinningTeam           string                  `json:"winningTeam,omitempty"`
	DefusePlayerLocations []PlayerLocationsV1DTO  `json:"defusePlayerLocations,omitempty"`
	PlantPlayerLocations  []PlayerLocationsV1DTO  `json:"plantPlayerLocations,omitempty"`
	PlayerStats           []PlayerRoundStatsV1DTO `json:"playerStats,omitempty"`
	DefuseLocation        LocationV1DTO           `json:"defuseLocation,omitempty"`
	PlantLocation         LocationV1DTO           `json:"plantLocation,omitempty"`
	DefuseRoundTime       int32                   `json:"defuseRoundTime,omitempty"`
	PlantRoundTime        int32                   `json:"plantRoundTime,omitempty"`
	RoundNum              int32                   `json:"roundNum,omitempty"`
}

// ContentDto data object.
type StatusContentV1DTO struct {
	Content string `json:"content,omitempty"`
	Locale  string `json:"locale,omitempty"`
}

// StatusDto data object.
type StatusV1DTO struct {
	ArchiveAt string `json:"archive_at,omitempty"`
	CreatedAt string `json:"created_at,omitempty"`
	// (Legal values:  info,  warning,  critical)
	IncidentSeverity string `json:"incident_severity,omitempty"`
	// (Legal values:  scheduled,  in_progress,  complete)
	MaintenanceStatus string `json:"maintenance_status,omitempty"`
	UpdatedAt         string `json:"updated_at,omitempty"`
	// (Legal values: windows, macos, android, ios, ps4, xbone, switch)
	Platforms []string             `json:"platforms,omitempty"`
	Titles    []StatusContentV1DTO `json:"titles,omitempty"`
	Updates   []UpdateV1DTO        `json:"updates,omitempty"`
	ID        int32                `json:"id,omitempty"`
}

// TeamDto data object.
type TeamV1DTO struct {
	// This is an arbitrary string. Red and Blue in bomb modes. The puuid of the player in deathmatch.
	TeamID string `json:"teamId,omitempty"`
	// Team points scored. Number of kills in deathmatch.
	NumPoints    int32 `json:"numPoints,omitempty"`
	RoundsPlayed int32 `json:"roundsPlayed,omitempty"`
	RoundsWon    int32 `json:"roundsWon,omitempty"`
	Won          bool  `json:"won,omitempty"`
}

// TierDetailDto data object.
type TierDetailV1DTO struct {
	RankedRatingThreshold int64 `json:"rankedRatingThreshold,omitempty"`
	StartingIndex         int64 `json:"startingIndex,omitempty"`
	StartingPage          int64 `json:"startingPage,omitempty"`
}

// UpdateDto data object.
type UpdateV1DTO struct {
	Author    string `json:"author,omitempty"`
	CreatedAt string `json:"created_at,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
	// (Legal values: riotclient, riotstatus, game)
	PublishLocations []string             `json:"publish_locations,omitempty"`
	Translations     []StatusContentV1DTO `json:"translations,omitempty"`
	ID               int32                `json:"id,omitempty"`
	Publish          bool                 `json:"publish,omitempty"`
}
