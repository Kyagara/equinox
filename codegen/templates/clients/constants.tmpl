{{ Preamble }}

{%- macro NewConstants(Type, Table, IsInteger) %}
{%- for Name, Details in Table sorted %}
    {%- if Details.Deprecated %}
    // # Deprecated
    //
    {%- endif %}
    // {{ Details.Description|safe }}
    {{ Name }} {{ Type }} = {%- if IsInteger %}{{ Details.Value }}{% else %}"{{ Details.Value }}"{% endif %}
{%- endfor %}
{%- endmacro %}

{%- macro Stringer(VarName, Type, Table, IsInt64) %}
func ({{ VarName }} {{ Type }}) String() string {
	switch {{ VarName }} {
    {%- for Name, Details in Table sorted %}
    case {{ Name }}:
        return "{{ Details.Value }}"
    {%- endfor %}
    default:
        return {% if IsInt64 %}strconv.FormatInt(int64({{ VarName }}), 10){% else %}string({{ VarName }}){% endif %}
	}
}
{%- endmacro %}

{% if ClientName == "val" %}
// Platform routes for Valorant.
type PlatformRoute string

const (
{{- NewConstants("PlatformRoute", VALRoutes) }}
)

{{- Stringer("route", "PlatformRoute", VALRoutes) }}
{%- endif %}

{% if ClientName == "lol" or ClientName == "tft" %}
// Platform routes for League of Legends and Teamfight Tactics.
type PlatformRoute string

const (
{{- NewConstants("PlatformRoute", LOL_TFT_Routes) }}
)

{{- Stringer("route", "PlatformRoute", LOL_TFT_Routes) }}


{% if ClientName == "lol" %}
// Tournament regions for League of Legends.
type TournamentRegion string

const (
{%- for Name, Details in LOL_TFT_Routes sorted %}
{%- if Details.TournamentRegion %}
    {%- if Details.Deprecated %}
    // # Deprecated
    //
    {%- endif %}
    // {{ Details.Description|safe }}
    {{ Details.TournamentRegion|upper }} TournamentRegion = "{{ Details.TournamentRegion|lower }}"
{%- endif %}
{%- endfor %}
)

func (route TournamentRegion) String() string {
	switch route {
    {%- for Name, Details in LOL_TFT_Routes sorted %}
    {%- if Details.TournamentRegion %}
    case {{ Details.TournamentRegion|upper }}:
        return "{{ Details.TournamentRegion|lower }}"
    {%- endif %}
    {%- endfor %}
    default:
        return string(route)
	}
}
{%- endif %}

// League of Legends and Teamfight Tactics ranked tiers, such as gold, diamond, challenger, etc.
type Tier string

const (
	IRON        Tier = "IRON"
	BRONZE      Tier = "BRONZE"
	SILVER      Tier = "SILVER"
	GOLD        Tier = "GOLD"
	PLATINUM    Tier = "PLATINUM"
    EMERALD     Tier = "EMERALD"
	DIAMOND     Tier = "DIAMOND"
	MASTER      Tier = "MASTER"
	GRANDMASTER Tier = "GRANDMASTER"
	CHALLENGER  Tier = "CHALLENGER"
)

func (tier Tier) String() string {
	switch tier {
    case IRON:
        return "IRON"
    case BRONZE:
        return "BRONZE"
    case SILVER:
        return "SILVER"
    case GOLD:
        return "GOLD"
    case PLATINUM:
        return "PLATINUM"
    case EMERALD:
        return "EMERALD"
    case DIAMOND:
        return "DIAMOND"
    case MASTER:
        return "MASTER"
    case GRANDMASTER:
        return "GRANDMASTER"
    case CHALLENGER:
        return "CHALLENGER"
	default:
		return string(tier)
	}
}

// League of Legends and Teamfight Tactics rank divisions, I, II, III, IV, and (deprecated) V.
type Division string

const (
	I   Division = "I"
	II  Division = "II"
	III Division = "III"
	IV  Division = "IV"
    // # Deprecated
    V   Division = "V"
)

func (division Division) String() string {
    switch division {
    case I:
        return "I"
    case II:
        return "II"
    case III:
        return "III"
    case IV:
        return "IV"
    case V:
        return "V"
    default:
        return string(division)
    }
}

// League of Legends and Teamfight Tactics game types: matched game, custom game, or tutorial game.
type GameType string

const (
{{- NewConstants("GameType", GameTypes) }}
)

{{- Stringer("gameType", "GameType", GameTypes) }}

// League of Legends and Teamfight Tactics ranked queue types.
type QueueType int32

const (
{{- NewConstants("QueueType", FilterTFT(QueueTypes, ClientName == "lol"), true) }}
)

{{- Stringer("queueType", "QueueType", FilterTFT(QueueTypes, ClientName == "lol")) }}

// League of Legends and Teamfight Tactics game modes, such as Classic,
// ARAM, URF, One For All, Ascension, etc.
type GameMode string

const (
{{- NewConstants("GameMode", FilterTFT(GameModes, ClientName == "lol")) }}
)

{{- Stringer("gameMode", "GameMode", FilterTFT(GameModes, ClientName == "lol")) }}

// League of Legends and Teamfight Tactics maps.
type Map int64

const (
{{- NewConstants("Map", FilterTFT(Maps, ClientName == "lol"), true) }}
)

{{- Stringer("lolMap", "Map", FilterTFT(Maps, ClientName == "lol"), true) }}

// League of Legends and Teamfight Tactics queues.
type Queue int32

const (
{{- NewConstants("Queue", FilterTFT(Queues, ClientName == "lol"), true) }}
)

{{- Stringer("queue", "Queue", FilterTFT(Queues, ClientName == "lol")) }}
{%- endif %}
