{{
    const dotUtils = require('./dotUtils.js');
    const spec = dotUtils.spec;
    const clientName = "{{# def.clientName }}";
    const clientNormalizedName = "{{# def.clientNormalizedName }}";
    const endpointGroups = dotUtils.getClientEndpoints(clientName);
}}// This package is used to interact with all {{= dotUtils.getFullAPIName(clientNormalizedName) }} endpoints.
{{~ Object.keys(endpointGroups) :endpoint }}
//   - {{= dotUtils.removeClientName(dotUtils.changeCase.pascalCase(endpoint)) }}
{{~}}
//
// Note: this package is automatically generated.

{{= dotUtils.preamble(clientName, spec.info.version) }}

import "github.com/Kyagara/equinox/internal"

// Note: this struct is automatically generated.
type {{= clientNormalizedName }}Client struct {
{{~ Object.keys(endpointGroups) :endpoint }}
{{ endpoint = dotUtils.removeClientName(dotUtils.changeCase.pascalCase(endpoint)); }}
	{{= endpoint }}  *{{= endpoint }}
{{~}}
}

// Creates a new {{= clientNormalizedName }}Client using the internal.Client provided.
func New{{= clientNormalizedName}}Client(client *internal.Client) *{{= clientNormalizedName }}Client {
	return &{{= clientNormalizedName }}Client{
{{~ Object.keys(endpointGroups) :endpoint }}
{{ endpoint = dotUtils.removeClientName(dotUtils.changeCase.pascalCase(endpoint)); }}
        {{= endpoint }}: &{{= endpoint }}{internal: client},
{{~}}
	}
}
