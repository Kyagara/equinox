{{
    const dotUtils = require('./dotUtils.js');
    const spec = dotUtils.spec;
    const clientName = "{{# def.clientName }}";
    const clientNormalizedName = "{{# def.clientNormalizedName }}";
}}// This package is used to interact with {{= clientNormalizedName }} endpoints.
//
// Automatically generated package.

{{= dotUtils.preamble(clientName, spec.info.version) }}

import (
	"github.com/Kyagara/equinox/internal"
)
{{
    const endpointGroups = dotUtils.getEndpointGroupsByName(clientName);
}}

// Note: this struct is automatically generated.
type {{= clientNormalizedName }}Client struct {
	internalClient  *internal.InternalClient
{{~ Object.keys(endpointGroups) :endpoint }}
{{ endpoint = dotUtils.removeClientName(dotUtils.changeCase.pascalCase(endpoint)); }}
	{{= endpoint }}  *{{= endpoint }}
{{~}}
}

// Creates a new {{= clientNormalizedName }}Client using the InternalClient provided.
func New{{= clientNormalizedName}}Client(client *internal.InternalClient) *{{= clientNormalizedName }}Client {
	return &{{= clientNormalizedName }}Client{
        internalClient: client,
{{~ Object.keys(endpointGroups) :endpoint }}
{{ endpoint = dotUtils.removeClientName(dotUtils.changeCase.pascalCase(endpoint)); }}
        {{= endpoint }}: &{{= endpoint }}{internalClient: client},
{{~}}
	}
}
